%ol.breadcrumb
  %li 应用中心
  %li= link_to "应用管理", url_for("/")
  %li
    %a{href: "#{url_for('/new')}"}
      新建应用
      %span.glyphicon.glyphicon-plus
:css   
  .apps th:nth-child(1), .apps td:nth-child(1) { text-align: left; width: 30%; }
  .apps th:nth-child(2), .apps td:nth-child(2) { text-align: left; width: 20%; }
  .apps th:nth-child(3), .apps td:nth-child(3) { text-align: center; width: 8%; }
  .apps th:nth-child(4), .apps td:nth-child(4) { text-align: center; width: 8%; }
  .apps th:nth-child(5), .apps td:nth-child(5) { text-align: center; width: 8%; }
  .apps th:nth-child(6), .apps td:nth-child(6) { text-align: center; width: 5%; }
  .apps th:nth-child(7), .apps td:nth-child(7) { text-align: center; width: 5%; }
  .apps th:nth-last-child(1), .apps td:nth-last-child(1) { text-align: center; width: 15%; }
#AppIndex
  %table.table.table-hover.table-condensed.table-strip.table-bordered.smart-table.apps
    %thead
      %th 应用名称
      %th 文件名称
      %th 类型
      %th 最新版本
      %th 上传版本
      %th 编辑
      %th 删除
      %th 更新时间
    %tbody{'v-for' => 'app in apps'}
      %tr{':id' => "'dom_'+app.uuid"}
        %td.name
          %a{'v-text' => 'app.name', ':href' => "'#{url_for('/')}' + app.uuid"}
        %td
          %span.label.label-default{'v-text' => 'app.file_name'}
        %td
          %span.label.label-success{'v-text' => 'app.file_type'}
        %td
          %a{'v-text' => 'app.latest_version', ':href' => "'#{url_for('/')}' + app.uuid + '/version/' + app.latest_version_uuid"}
        %td
          %a{':href' => "'#{url_for('/')}' + app.uuid + '/version/upload'"}
            %span.glyphicon.glyphicon-upload
        %td
          %a{':href' => "'#{url_for('/')}' + app.uuid + '/edit'"}
            %span.glyphicon.glyphicon-edit
        %td
          %a.btn.btn-xs.btn-link{'@click' => "removeApp(app)", style: "color: red;"}
            .span.glyphicon.glyphicon-trash
        %td{'v-text' => 'app.updated_at'}

  = will_paginater @records

:javascript
  new Vue({
    el: '#AppIndex',
    data: function() {
      return { 
        apps: #{@records.map(&:to_hash).map(&:to_json) }.map(function(record) { return JSON.parse(record); })
      }
    },
    created() {
      console.log('apps:', this.apps)
    },
    methods: {
      removeApp(app) {
        if(!confirm('确定删除应用「' + app.name + '」?')) {
          return false;
        }

        let that = this;
        window.Loading.show("删除中...");
        $.ajax({
          type: 'delete',
          url: "#{url_for('/')}" + app.uuid
        }).done(function(res, status, xhr) {
          if(res.code === 201) {
            window.Loading.show("删除成功");
            let appIndex = that.apps.findIndex(function(ele) { return ele.uuid === app.uuid; });
            that.$nextTick(function() {
              that.apps.splice(appIndex, 1)
            })
          } else {
            window.Loading.show("删除失败");
          }
        }).fail(function(xhr, status, error) {
            window.Loading.show("删除失败");
        }).always(function(res, status, xhr) {
            window.Loading.hide();
        });
      }
    }
  })
