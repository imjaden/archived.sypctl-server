<script>
new Vue({
  el: '#jobForm',
  data: function() {
    return { 
      record: <%= @record.to_hash.to_json %>,
      job: null,
      showJobTemplates: true,
      jobTemplates: [],
      showDevices: false,
      deviceCheckedList: [],
      devices: [],
      showApps: false,
      apps: [],
      app: {},
      showVersions: false,
      versions: [],
      version: {},
      latest_version: null
    }
  },
  created() {
    this.listJobTemplates(0)
  },
  watch: {
    deviceCheckedList(now, old) {
      console.log('deviceCheckedList:', now)
      let deviceList = [], 
          deviceNames = [];

      now.forEach((item) => {
        deviceList.push({name: item.human_name, uuid: item.uuid})
        deviceNames.push('<' + item.human_name + '>')
      })
      this.record.device_name = deviceNames.join(',')
      this.record.device_list = JSON.stringify(deviceList)
    }
  },
  methods: {
    checkForm(el) {
      console.log(el)
      let isOk = false
      if(!this.record.title) {
        window.Loading.popup('请选择模板')
      } else if(!this.record.device_list) {
        window.Loading.popup('请选择设备')
      } else if(!this.record.command) {
        window.Loading.popup('请选择有效模板')
      } else {
        isOk = true
      }

      if(isOk) {
        return true
      } else {
        el.preventDefault();
      }
    },
    jobTemplateRadioClick(item) {
      let content = item.content
      if(item.content && item.content.length) {
        command = item.content.split("\n").map(function(el) {
          return $.trim(el);
        }).join("\n");
      }

      this.record.title = item.title
      this.record.command = content
    },
    listJobTemplates(page) {
      let that = this
      that.showJobTemplates = true
      that.showDevices = false
      that.showApps = false
      that.showVersions = false

      window.Loading.show('获取数据中...')
      $.ajax({
        method: 'get',
        url: '/api/v1/job_templates',
        contentType: 'application/json',
        data: {page: page, page_size: 100}
      }).done(function(res, status, xhr) {
        that.jobTemplates = res.data
      }).fail(function(res, status, xhr) {
      }).always(function(res, status, xhr) {
        window.Loading.hide()
      });
    },
    listDevices(page) {
      let that = this
      that.showJobTemplates = false
      that.showDevices = true
      that.showApps = false
      that.showVersions = false

      window.Loading.show('获取数据中...')
      $.ajax({
        method: 'get',
        url: '/api/v1/devices',
        contentType: 'application/json',
        data: {page: page, page_size: 100}
      }).done(function(res, status, xhr) {
        that.devices = res.data
      }).fail(function(res, status, xhr) {
      }).always(function(res, status, xhr) {
        window.Loading.hide()
      });
    },
    appRadioClick(item) {
      this.app = item
      this.record.app_id = item.id
      this.record.app_name = item.name
      this.record.app_uuid = item.uuid
    },
    listApps(page) {
      let that = this
      that.showJobTemplates = false
      that.showDevices = false
      that.showApps = true
      that.showVersions = false

      window.Loading.show('获取数据中...')
      $.ajax({
        method: 'get',
        url: '/api/v1/apps',
        contentType: 'application/json',
        data: {page: page, page_size: 100}
      }).done(function(res, status, xhr) {
        that.apps = res.data
      }).fail(function(res, status, xhr) {
      }).always(function(res, status, xhr) {
        window.Loading.hide()
      });
    },
    versionRadioClick(item) {
      this.version = item
      this.record.version_id = item.id
      this.record.version_name = item.version
    },
    listVersions(page) {
      if(!this.record.app_id) {
        window.Loading.popup("请选择应用")
        return false;
      }

      let that = this
      that.showJobTemplates = false
      that.showDevices = false
      that.showApps = false
      that.showVersions = true
      window.Loading.show('获取数据中...')
      $.ajax({
        method: 'get',
        url: '/api/v1/app/versions?uuid=' + that.record.app_uuid,
        contentType: 'application/json',
        data: {page: page, page_size: 100}
      }).done(function(res, status, xhr) {
        that.versions = res.data

      }).fail(function(res, status, xhr) {
      }).always(function(res, status, xhr) {
        window.Loading.hide()
      });
    },
    getAppLatestVersion(callback) {
      let that = this
      window.Loading.show('获取数据中...')
      $.ajax({
        method: 'get',
        url: '/api/v1/app/latest_version?uuid=' + that.app.latest_version_uuid,
        contentType: 'application/json'
      }).done(function(res, status, xhr) {
        window.Loading.hide()
        if(res.code == 200) {
          that.latest_version = res.data
          that.app.latest_version = res.data
        } else {
          window.Loading.popup(res.message)
        }
        callback()
      }).fail(function(res, status, xhr) {
      }).always(function(res, status, xhr) {
        window.Loading.hide()
      });
    },
    renderCommand() {
      if(!this.record.command) {
        window.Loading.popup("请选择部署模板")
        return false;
      }

      let that = this
      this.getAppLatestVersion(() => {
        let command = that.record.command,
            matchDatas = command.match(/\{\{(.*?)\}\}/g),
            varObjs = {},
            varText, klass, obj, parts, result;

        matchDatas.forEach((data) => {
          varText = data.replace(/\{|\}|\s/g, '')
          if(!varObjs[varText]) {
            parts = varText.split('.')
            klass = parts.splice(0, 1)[0]
            obj = (klass == 'app' ? this.app : this.version)
            parts.forEach((part, inx) => {
              obj = obj[part] 
            })
            varObjs[varText] = obj
            command = command.replace(new RegExp(data, 'g'), JSON.stringify(obj))
          }
          console.log(varText + ':', varObjs[varText])
        })
        that.record.command = command
      })
    }
  }
})
</script>